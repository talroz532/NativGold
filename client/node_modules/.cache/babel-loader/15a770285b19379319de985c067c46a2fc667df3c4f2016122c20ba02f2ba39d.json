{"ast":null,"code":"const aircraft_engine_power = 100000; // power of the aircraft engine (N) (F in the formula)\nconst aircraft_weight = 35000; // weight of the aircraft and the crew members (kg)\nconst aircraft_speed = 140; //The speed of the plane in meters per second (m/s)\nconst max_mass = 42857.142; //max mass that aircraft can carry\n\n//func 1 - gets the cargo weight\n//return take off Acceleration time \nexport function getAcceleration(cargo) {\n  let total_mass = aircraft_weight + cargo; // total mass (m in the formula)\n  let acceleration = aircraft_engine_power / total_mass; // (a in the formula)\n\n  return acceleration;\n}\n\n//func 2 - gets the cargo weight\n//return take off distance (x in formula)\nexport function getTakeOffDistance(cargo) {\n  let acceleration = getAcceleration(cargo);\n  let takeoff_time = getTakeOffTime(cargo);\n  return acceleration * Math.pow(takeoff_time, 2) / 2 + aircraft_speed * takeoff_time;\n}\n\n//func 3 - gets the cargo weight\n//return take off time (t in the formula)\nexport function getTakeOffTime(cargo) {\n  return aircraft_speed / getAcceleration(cargo);\n}\n\n//func 4 -  gets the cargo weight\n//return excess cargo weight\nexport function getExcessCargo(cargo) {\n  if (cargo <= max_mass) return 0;\n  return cargo - max_mass;\n}","map":{"version":3,"names":["aircraft_engine_power","aircraft_weight","aircraft_speed","max_mass","getAcceleration","cargo","total_mass","acceleration","getTakeOffDistance","takeoff_time","getTakeOffTime","Math","pow","getExcessCargo"],"sources":["C:/Users/Tal/Desktop/Nativ-Gold/client/src/functions.js"],"sourcesContent":["\r\nconst aircraft_engine_power = 100000 // power of the aircraft engine (N) (F in the formula)\r\nconst aircraft_weight = 35000// weight of the aircraft and the crew members (kg)\r\nconst aircraft_speed = 140; //The speed of the plane in meters per second (m/s)\r\nconst max_mass = 42857.142; //max mass that aircraft can carry\r\n\r\n//func 1 - gets the cargo weight\r\n//return take off Acceleration time \r\nexport function getAcceleration(cargo){\r\n\r\n    let total_mass = aircraft_weight + cargo; // total mass (m in the formula)\r\n    let acceleration = aircraft_engine_power / total_mass // (a in the formula)\r\n\r\n    return acceleration;\r\n}\r\n\r\n//func 2 - gets the cargo weight\r\n//return take off distance (x in formula)\r\nexport function getTakeOffDistance(cargo){\r\n    let acceleration = getAcceleration(cargo);\r\n    let takeoff_time = getTakeOffTime(cargo);\r\n    return ( (acceleration * Math.pow(takeoff_time,2))/2 + (aircraft_speed * takeoff_time) );\r\n}\r\n\r\n//func 3 - gets the cargo weight\r\n//return take off time (t in the formula)\r\nexport function getTakeOffTime(cargo){\r\n    return (aircraft_speed/getAcceleration(cargo));\r\n}\r\n\r\n//func 4 -  gets the cargo weight\r\n//return excess cargo weight\r\nexport function getExcessCargo (cargo){\r\n    if (cargo <= max_mass)\r\n        return 0;\r\n\r\n    return (cargo - max_mass);\r\n}\r\n"],"mappings":"AACA,MAAMA,qBAAqB,GAAG,MAAM,EAAC;AACrC,MAAMC,eAAe,GAAG,KAAK;AAC7B,MAAMC,cAAc,GAAG,GAAG,CAAC,CAAC;AAC5B,MAAMC,QAAQ,GAAG,SAAS,CAAC,CAAC;;AAE5B;AACA;AACA,OAAO,SAASC,eAAe,CAACC,KAAK,EAAC;EAElC,IAAIC,UAAU,GAAGL,eAAe,GAAGI,KAAK,CAAC,CAAC;EAC1C,IAAIE,YAAY,GAAGP,qBAAqB,GAAGM,UAAU,EAAC;;EAEtD,OAAOC,YAAY;AACvB;;AAEA;AACA;AACA,OAAO,SAASC,kBAAkB,CAACH,KAAK,EAAC;EACrC,IAAIE,YAAY,GAAGH,eAAe,CAACC,KAAK,CAAC;EACzC,IAAII,YAAY,GAAGC,cAAc,CAACL,KAAK,CAAC;EACxC,OAAUE,YAAY,GAAGI,IAAI,CAACC,GAAG,CAACH,YAAY,EAAC,CAAC,CAAC,GAAE,CAAC,GAAIP,cAAc,GAAGO,YAAa;AAC1F;;AAEA;AACA;AACA,OAAO,SAASC,cAAc,CAACL,KAAK,EAAC;EACjC,OAAQH,cAAc,GAACE,eAAe,CAACC,KAAK,CAAC;AACjD;;AAEA;AACA;AACA,OAAO,SAASQ,cAAc,CAAER,KAAK,EAAC;EAClC,IAAIA,KAAK,IAAIF,QAAQ,EACjB,OAAO,CAAC;EAEZ,OAAQE,KAAK,GAAGF,QAAQ;AAC5B"},"metadata":{},"sourceType":"module","externalDependencies":[]}